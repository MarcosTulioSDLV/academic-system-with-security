
CREATE TABLE IF NOT EXISTS TB_ROLE(
    id BIGINT AUTO_INCREMENT PRIMARY KEY,
    role_name VARCHAR(255) NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS TB_USER(
     id BIGINT AUTO_INCREMENT PRIMARY KEY,
     username VARCHAR(255) NOT NULL UNIQUE,
     password VARCHAR(255) NOT NULL
);

CREATE TABLE IF NOT EXISTS TB_USER_ROLE(
    user_id BIGINT,
    role_id BIGINT,
    PRIMARY KEY (user_id,role_id),
    FOREIGN KEY (user_id) REFERENCES TB_USER(id),
    FOREIGN KEY (role_id) REFERENCES TB_ROLE(id)
);

CREATE TABLE IF NOT EXISTS TB_PROFESSOR (
    id BIGINT AUTO_INCREMENT PRIMARY KEY,
    document VARCHAR(255) NOT NULL UNIQUE,
    first_name VARCHAR(255) NOT NULL,
    last_name VARCHAR(255) NOT NULL,
    phone_number VARCHAR(255) NOT NULL UNIQUE,
    department VARCHAR(255) NOT NULL,
    email VARCHAR(255) NOT NULL UNIQUE,
    user_id BIGINT NOT NULL,  -- FK to TB_USER
    FOREIGN KEY (user_id) REFERENCES TB_USER(id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS TB_COURSE (
    id BIGINT AUTO_INCREMENT PRIMARY KEY,
    course_code VARCHAR(255) NOT NULL UNIQUE,
    name VARCHAR(255) NOT NULL,
    description TEXT NOT NULL,
    credits INTEGER NOT NULL,
    max_students INTEGER NOT NULL,
    current_students INTEGER NOT NULL,
    professor_id BIGINT,
    FOREIGN KEY (professor_id) REFERENCES TB_PROFESSOR(id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS TB_STUDENT (
    id BIGINT AUTO_INCREMENT PRIMARY KEY,
    document VARCHAR(255) NOT NULL UNIQUE,
    first_name VARCHAR(255) NOT NULL,
    last_name VARCHAR(255) NOT NULL,
    gender VARCHAR(255) NOT NULL,
    birth_date DATE NOT NULL,
    email VARCHAR(255) NOT NULL UNIQUE,
    user_id BIGINT NOT NULL,-- FK to TB_USER
    FOREIGN KEY (user_id) REFERENCES TB_USER(id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS TB_COURSE_STUDENT(
    course_id BIGINT NOT NULL,
    student_id BIGINT NOT NULL,
    score DOUBLE NOT NULL,
    PRIMARY KEY (course_id, student_id),
    FOREIGN KEY (course_id) REFERENCES TB_COURSE(id) ON DELETE CASCADE,
    FOREIGN KEY (student_id) REFERENCES TB_STUDENT(id) ON DELETE CASCADE
);